@model Capstone.ViewModels.AggregateViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@{
    Layout = "~/Views/Shared/_TempleScrumHeader.cshtml";
}


<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/professorStyling.css">

    <title>View Reports Page</title>

</head>
<body>

    <div class="content-title">
        <h1>View Reports Page</h1>
    </div>

    <div class="content-container">
        <nav class="sidenav">
            <a asp-controller="Professor" asp-action="Dashboard">Dashboard</a>
            <a asp-controller="Professor" asp-action="StudentManagement">Student Management</a>
            <a asp-controller="Professor" asp-action="AggregateView">Aggregate View</a>
            <a asp-controller="Professor" asp-action="ScrumManagement">Scrum Management</a>
            <a asp-controller="Professor" asp-action="TeamManagement">Team Management</a>
            <a asp-controller="Login" asp-action="Login">Logout</a>
        </nav>

        <div class="reports-container">
            <div class="team-filter">
                <label for="filterTeam">Team:</label>
                <select id="filterTeam" class="form-control" onchange="filterUsersByTeam()">
                    <option value="all">All Teams</option>
                    @foreach (var team in Model.Teams)
                    {
                        <option value="@team.ID">@team.Name</option>
                    }
                </select>
            </div>
            <div class="team-filter">
                <label for="filterStudent">Student:</label>
                <select id="filterStudent" class="form-control" onchange="filterUsersByStudent()">
                    <option value="all">All Students</option>
                    @foreach (var student in Model.Students)
                    {
                        <option value="@student.ID">@($"{student.FirstName} {student.LastName}")</option>
                    }
                </select>
            </div>
            <div class="team-filter">
                <label for="filterDateFrom">To:</label>
                <input type="date" id="filterDateFrom" name="fromDate"
                       min="@DateTime.Now.ToString("yyyy-MM-dd")"
                       onchange="filterByDateFrom()" class="form-control" />
            </div>
            <div class="team-filter">
                <label for="filterDateTo">To:</label>
                <input type="date" id="filterDateTo" name="toDate"
                       min="@DateTime.Now.ToString("yyyy-MM-dd")"
                       onchange="filterByDateTo()" class="form-control" />
            </div>
        </div>

        <div class="response-cards">
            @foreach (var response in Model.Responses)
            {
                User student = null;
                Team team = null;
                Scrum scrum = null;

                foreach (var s in Model.Students)
                {
                    if (s.ID == response.UserID) {
                        student = s;
                        break;
                    }
                }

                foreach (var s in Model.Scrums)
                {
                    if (s.ID == response.ScrumID)
                    {
                        scrum = s;
                    }
                }

                foreach (TeamUser teamUser in Model.TeamUsers)
                {
                    if (teamUser.UserID == response.UserID)
                    {
                        foreach (var t in Model.Teams)
                        {
                            team = t;
                            break;
                        }
                    }
                    break;
                }

                <div class="response-card">
                    <div class="response-header">
                        <div class="response-name">Student: @(student.FirstName + " " + student.LastName)</div>
                        <div class="response-team">Team: @(team.Name)</div>
                        <div class="response-scrum-id">Scrum: @scrum.Name</div>
                        <div class="response-due-date">Due Date: @scrum.DateDue</div>
                        <div class="response-date">Submitted: @response.DateSubmitted</div>
                    </div>
                    <div class="response-body">
                        <div class="response-question">
                            <label>Question 1:</label>
                            <div>@response.QuestionOne</div>
                        </div>
                        <div class="response-question">
                            <label>Question 2:</label>
                            <div>@response.QuestionTwo</div>
                        </div>
                        <div class="response-question">
                            <label>Question 3:</label>
                            <div>@response.QuestionThree</div>
                        </div>
                    </div>
                </div>
            }
        </div>



    </div>

</body>








































@* <div class="content">
    <!-- Filters Section -->
    <div class="d-flex justify-content-between mb-3 filter_container">
        <div class="form-group">
            <label for="teamSelect">Team</label>
            <select class="form-control" id="teamSelect">
                <option>Scrum Reporting</option>
                <!-- Add more options as needed -->
            </select>
        </div>
        <div class="form-group">
            <label for="studentSelect">Student</label>
            <select class="form-control" id="studentSelect">
                <option>Select</option>
                <!-- Add more options as needed -->
            </select>
        </div>
        <div class="form-group">
            <label for="dateSelect">Select Date</label>
            <input type="date" class="form-control" id="dateSelect">
        </div>
    </div>

    <!-- Cards Section -->
    <div class="card-container">
        <div class="card report-card">
            <div class="card-body">
                <h5 class="card-title">Jacob Zall</h5>
                <p class="card-subtitle mb-2 text-muted">Scrum Reporting</p>
                <p>Q1: I have accomplished creating UI</p>
                <p>Q2: Implementing UI Code</p>
                <p>Q3:</p>
                <p>Q4:</p>
                <small class="text-muted">Date: 9/7/24 - 9/24/24</small>
            </div>
        </div>
        <div class="card report-card">
            <div class="card-body">
                <h5 class="card-title">Hai Nguyen</h5>
                <p class="card-subtitle mb-2 text-muted">Scrum Reporting</p>
                <p>Q1: I have accomplished creating UI</p>
                <p>Q2: Implementing UI Code</p>
                <p>Q3:</p>
                <p>Q4:</p>
                <small class="text-muted">Date: 9/7/24 - 9/24/24</small>
            </div>
        </div>
        <!-- Add more cards as needed -->
    </div>
</div> *@