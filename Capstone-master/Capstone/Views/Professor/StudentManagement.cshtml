@model List<Capstone.Models.User>

@{
    Layout = "~/Views/Shared/_TempleScrumHeader.cshtml";

    // Teams list passed via ViewBag from the controller
    var teams = ViewBag.Teams as List<string>;
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/professorStyling.css">

    <title>Users Management Page</title>


    <style>
        /* .scrum-item {
                                    background-color: #f8f9fa;
                                    border-radius: 8px;
                                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                                }

                                .scrum-name {
                                    font-weight: bold;
                                }

                                .scrum-due-date {
                                    font-size: 0.9em;
                                }

                                .btn {
                                    border-radius: 20px;
                                }

                                .action-buttons button {
                                    width: 150px;
                                }

                                .team-select select {
                                    border-radius: 20px;
                                    padding: 5px;
                                } */





    </style>

</head>
<body>

    <div class="content-title">
        <h1>User Management Page</h1>
    </div>

    <div class="content-container">
        <nav class="sidenav">
            <a asp-controller="Professor" asp-action="Dashboard">Dashboard</a>
            <a asp-controller="Professor" asp-action="StudentManagement">Student Management</a>
            <a asp-controller="Professor" asp-action="AggregateView">Aggregate View</a>
            <a asp-controller="Professor" asp-action="ScrumManagement">Scrum Management</a>
            <a asp-controller="Professor" asp-action="TeamManagement">Team Management</a>
            <a asp-controller="Login" asp-action="Login">Logout</a>
        </nav>

        <!-- Team Filter Dropdown -->
        <div class="team-filter">
            <label for="teamFilter">Teams:</label>
            <select id="teamFilter" class="form-control" onchange="filterUsersByTeam()">
                <option value="all">ALL</option>
                @foreach (var team in ViewBag.Teams)
                {
                    <option value="@team.ID">@team.Name</option>
                }
            </select>

            <!-- Users List -->
            <div id="usersList" class="users-container">
                @foreach (var user in Model)
                {
                    if (user.UserType == "student")
                    {
                        <div class="user-row" data-user-id="@user.ID">
                            <form action="UserManagement" method="post">
                                <span class="user-name">@user.FirstName @user.LastName</span>
                                @Html.DropDownList("newTeamID", user.SelectList, new { @class = "team-dropdown" })
                                <input type="hidden" name="userID" value="@user.ID" />
                                <button type="submit" class="change-team-btn">Change Team</button>
                            </form>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <script>
        // Function to dynamically filter users based on the selected team
        function filterUsersByTeam() {
            var selectedTeam = document.getElementById("teamFilter").value;
            var userRows = document.querySelectorAll(".user-row");

            userRows.forEach(function (row) {
                var teamId = row.querySelector(".team-dropdown").value;
                if (selectedTeam === "all" || teamId === selectedTeam) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }
    </script>



</body>




























@* <div class="user-list mb-4">
    @foreach (var user in Model)
    {
        <div class="user-item d-flex justify-content-between align-items-center p-3 mb-2">
            <div class="scrum-info d-flex align-items-center">
                <span class="user-name mr-4">@user.Name</span>

                <!-- Dropdown List for Teams -->
                <div class="team-select mr-4">
                    <select name="team" class="form-control">
                        @foreach (var team in teams)
                        {
                            <option value="@team">@team</option>
                        }
                    </select>
                </div>
            </div>

            <div class="scrum-actions d-flex align-items-center">
                <button class="btn btn-danger mr-2">Change Team</button>
                <button class="btn btn-outline-danger">&times;</button>
            </div>
        </div>
    }
</div> *@







