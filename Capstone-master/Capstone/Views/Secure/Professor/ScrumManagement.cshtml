@model List<Capstone.Models.Scrum>

@{
    Layout = "~/Views/Shared/_TempleScrumHeader.cshtml";
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/pages-professor.css">
    <title>Scrum Management Page</title>
</head>

<body>
    <div class="content-title">
        <h1>Scrum Management Page</h1>
    </div>

    <div class="content-container">
        <button class="hamburger-menu" onclick="toggleNav()" aria-label="Open navigation menu">☰</button>

        <nav class="sidenav" id="navLinks">
            <a asp-controller="Professor" asp-action="Dashboard">Dashboard</a>
            <a asp-controller="Professor" asp-action="StudentManagement">Student Management</a>
            <a asp-controller="Professor" asp-action="AggregateView">Aggregate View</a>
            <a asp-controller="Professor" asp-action="ScrumManagement">Scrum Management</a>
            <a asp-controller="Professor" asp-action="TeamManagement">Team Management</a>
            <a asp-controller="Login" asp-action="Login">Logout</a>
        </nav>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-error">
                @TempData["ErrorMessage"]
            </div>
        }

        <!-- Scrums List -->
        <div id="scrumsList" class="scrums-container">
            @foreach (var scrum in Model)
            {
                <div class="scrum-row" data-scrum-id="@scrum.ID">
                    <form action="ScrumManagement" method="post">
                        <span class="scrum-name">@scrum.Name</span>
                        <span class="scrum-due-date">
                            Due:
                            @if (scrum.IsActive)
                            {
                                <span>@scrum.DateDue.ToString("MM/dd/yyyy h:mm:ss tt")</span> <!-- Display as label when active -->
                            }
                            else
                            {
                                <input type="datetime-local" id="dateDue_@scrum.ID" name="DateDue"
                                       value="@scrum.DateDue.ToString("yyyy-MM-ddTHH:mm")"
                                       min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required
                                       onchange="validateDueDate(@scrum.ID)" />
                            }
                        </span>
                        <input type="hidden" name="scrumID" value="@scrum.ID" />
                        <input type="hidden" name="action" value="@(!scrum.IsActive ? "Publish" : "Unpublish")" />

                        @* Publish Button *@
                        <button type="submit" class="publish-btn" style="background-color: @(!scrum.IsActive ? "#006e3d" : "#808080");">
                            @(!scrum.IsActive ? "Publish" : "Unpublish")
                        </button>
                    </form>

                    @* Remove Scrum Button *@
                    <form action="DeleteScrum" method="post" style="display:inline;">
                        <input type="hidden" name="scrumID" value="@scrum.ID" />
                        <button type="submit" class="remove-scrum-btn" onclick="return confirm('Are you sure you want to delete this scrum?');">
                            &#x2716;
                        </button>
                    </form>
                </div>
            }

            <!-- Buttons at the Bottom -->
            <div class="bottom-buttons-container">
                <form action="ScrumManagement" method="post" style="display:inline;">
                    <input type="hidden" name="action" value="AddScrum" />
                    <button type="submit" class="bottom-button" id="addScrumBtn">Add Scrum</button>
                </form>
                <button type="button" class="bottom-button" id="exportDataBtn" onclick="openExportModal()">Export Data</button>
                <form action="NukeDatabase" method="post" style="display:inline;" onsubmit="return confirm('Are you sure you want to start a new semester? This will delete all data from current semester!');">
                    <button type="submit" class="bottom-button" id="newSemesterBtn">New Semester</button>
                </form>
            </div>
        </div>
    </div>

    <div id="exportModal" class="modal" style="display: none;">
        <div class="modal-content">
            <h4>Enter Export Details</h4>
            <form id="exportDataForm" method="post" action="/Secure/Professor/ExportData" onsubmit="return validateExportData();">
                <label for="year">Year:</label>
                <input type="text" id="year" name="year" required pattern="^\d{4}$" maxlength="4" title="Please enter a 4-digit year">
                <label for="semester">Semester:</label>
                <select id="semester" name="semester" required>
                    <option value="Spring">Spring</option>
                    <option value="Fall">Fall</option>
                </select>
                <label for="courseNumber">Course Number:</label>
                <input type="number" id="courseNumber" name="courseNumber" required min="0000" max="9999" maxlength="4" title="Please enter a 4-digit course number">
                <label for="sectionNumber">Section Number:</label>
                <input type="number" id="sectionNumber" name="sectionNumber" required min="000" max="999" maxlength="3" title="Please enter a 3-digit section number">
                <label for="department">Department:</label>
                <input type="text" id="department" name="department" required pattern="^[A-Z]{3,4}$" maxlength="4" title="Department must be 3 to 4 uppercase letters" oninput="this.value = this.value.toUpperCase();">
                <input type="hidden" id="fileName" name="fileName" />
                <div class="modal-buttons">
                    <button type="submit">Generate CSV</button>
                </div>
            </form>
        </div>

        <button onclick="closeExportModal()">Close</button>
    </div>
    <script>
        function toggleNav() {
            const navLinks = document.getElementById('navLinks');
            navLinks.classList.toggle('active');
        }

        function validateDueDate(scrumID) {
            const dueDateInput = document.getElementById(`dateDue_${scrumID}`);
            const dueDate = new Date(dueDateInput.value);
            const today = new Date();

            if (dueDate < today) {
                alert('The due date cannot be in the past!');
                dueDateInput.value = ''; // Clear the input if invalid
            }
        }

        function openExportModal() {
            document.getElementById('exportModal').style.display = 'block';
        }

        function closeExportModal() {
            document.getElementById('exportModal').style.display = 'none';
        }

        window.onclick = function (event) {
            const modal = document.getElementById('exportModal');
            if (event.target === modal) {
                closeExportModal();
            }
        }

        function validateExportData() {
            const year = document.getElementById('year').value;
            const semester = document.getElementById('semester').value;
            const courseNumber = document.getElementById('courseNumber').value;
            const sectionNumber = document.getElementById('sectionNumber').value;
            const department = document.getElementById('department').value;

            if (!/^\d{4}$/.test(year)) {
                alert('Year must be a four-digit number.');
                return false;
            }

            if (!/^\d{4}$/.test(courseNumber)) {
                alert('Course number must be a four-digit number.');
                return false;
            }

            if (!/^\d{3}$/.test(sectionNumber)) {
                alert('Section number must be a three-digit number.');
                return false;
            }

            if (!/^[A-Z]{3,4}$/.test(department)) {
                alert('Department must be 3 to 4 uppercase letters.');
                return false;
            }

            const fileName = `${year}-${semester}-${department}${courseNumber}-${sectionNumber}.csv`;
            document.getElementById('fileName').value = fileName;

            return true;
        }
    </script>
    <footer class="footer">
        <div class="container">
            &copy; 2024 Temple SCRUM. All rights reserved.
        </div>
    </footer>
</body>
